daml 1.2
module ASMInventory where

import SCTypes
import Order

import CMInventory

type AssemblyCid = ContractId Assembly
template Assembly

  with
    supplier : Party
    owner : Party
    sku : Text
    qty : Int
    observers : [Party]

  where
    ensure qty >= 0

    signatory owner

    observer observers

    controller owner can

        ASAssemble : (AssemblyCid, ComponentCid)
            with
                cmpnntId : ComponentCid
                componentsUsed : Int
                partsAssembled : Int
            do
                component <- fetch cmpnntId
                assert(componentsUsed <= component.qty )
                archive cmpnntId

                nCmpntInv <- create component with
                    qty = component.qty - componentsUsed

                asmInv <- create this with 
                    qty = partsAssembled                

                return (asmInv, nCmpntInv)

        ASMfill : (AssemblyCid, AssemblyCid)
            with
                oid : AcceptedOrderCid
            do  
                order <- fetch oid
                assert (
                    order.assetType == Assmbld &&
                    order.qty <= qty
                    )

                let fAmount = order.qty
               
                exercise oid Fill with 
                    fillQuantity = fAmount
                    fillAssetType = Assmbld
                    fillSku = sku               

                inv <- create this with 
                    qty = qty - fAmount

                fill <- create this with 
                    qty = fAmount
                return (inv, fill)
        
        ASMTransfer : AssemblyTransferId
            with
                newOwner : Party
            do create AssemblyTransfer with
                assmbly = this; newOwner



type AssemblyTransferId = ContractId AssemblyTransfer
template AssemblyTransfer

    with 
        assmbly : Assembly
        newOwner: Party
        
    where
        signatory assmbly.supplier, assmbly.owner

        controller assmbly.owner can
            ASMCancel : AssemblyCid
                do create assmbly

        controller newOwner can
            ASMReject : AssemblyCid
                do create assmbly

            ASMAccept : AssemblyCid
                do
                newassmbly <- create assmbly with
                    owner = newOwner
                    observers = []
                return newassmbly
